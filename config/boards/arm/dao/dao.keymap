/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
   &kp LWIN &kp ESK   &kp Q &kp W &kp E &kp R &kp T &kp Y         &kp U  &kp I     &kp O   &kp P    &kp BSPC &mt RWIN RBKT
      &mt LCTRL TAB   &kp A &kp S &kp D &kp F &kp G &kp H         &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N         &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                         &kp LGUI &mo LWR &lt RSE SPACE &lt RSE ENTER &mo LWR &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp GRAVE &kp N1    &kp N2    &kp N3   &kp N4   &kp N5           &kp N6    &kp N7   &kp N8   &kp N9    &kp N0   &trans &mt RGUI F12
          &trans    &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &mt RCTRL PIPE
          &trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC         &kp LBKT  &kp RBKT &kp SEMI &kp COLON &kp BSLH &trans
                                          &trans &trans &lt ADJ SPACE   &lt ADJ ENTER &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &trans      &kp F1  &kp F2  &kp F3 &kp F4 &kp F5        &kp PG_UP &none   &kp UP   &none    &none   &kp BSPC &trans
          &trans      &kp F6  &kp F7  &kp F8 &kp F9 &kp F10       &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL  &kp BSPC
          &trans      &kp F11 &kp F12 &trans &trans &trans        &none     &kp HOME &none    &kp END   &none    &trans
                                        &trans &mo ADJ &trans   &trans &mo ADJ &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &none  &reset       &bootloader  &none        &none        &none        &none              &none        &kp C_BRI_DN &none           &kp C_BRI_UP &bootloader &reset &none
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &none        &kp C_VOL_UP &kp C_MUTE      &kp C_VOL_DN &none       &none
          &none        &none        &none        &none        &none        &none              &none        &kp C_PREV   &kp C_PLAY      &kp C_NEXT   &none       &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
